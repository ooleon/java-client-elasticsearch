name: Docker Image CI

on: [push]

jobs:      

  ElasticSearch1:

    runs-on: ubuntu-latest

    steps:
    - name: actions/checkout
      uses: actions/checkout@v2

    - uses: getong/elasticsearch-action@v1
      with:
        elasticsearch version: '5.6.16'
        host port: 9200
        container port: 9200
        discovery type: 'single-node'
    
    - name: Run the Docker image mvn -v
      run: mvn -v

    - name: Test pwd
      run: pwd

    - name: Changing WORKDIR source code /home/runner/work/java-client-elasticsearch
      run: cd /home/runner/work/java-client-elasticsearch

    - name: Test ls -l
      run: ls -l

    - name: Test mvn
      run: mvn test -Dtest=ESMainTest test
           #docker build . --file Dockerfile --tag my-image-name:$(date +%s)

    - name: Run the Docker image Test
      run: ls -l

    - name: Run the Docker image ESMainTest
      run: mvn test -Dtest=ESMainTest test

    - name: Run curl elastic cat/health verbose
      run: curl http://127.0.0.1:9200/_cat/health?v

    - name: Run curl elastic cat/status verbose
      run: curl http://127.0.0.1:9200/_cat/status?v

    - name: Up  work's Directory
      run:  ls -l
          & cd /home/runner/work
          & ls -l
          & cd /home/runner/work/java-client-elasticsearch 
          & ls -l
          & cd /home/runner/work/java-client-elasticsearch/java-client-elasticsearch
          & ls -l


#      run: docker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:5.6.16

  test:

    runs-on: ubuntu-latest
    # maven:alpine
    # ubuntu-latest

    steps:
#    - uses: getong/elasticsearch-action@v1
    - name: actions/checkout v2
      uses: actions/checkout@v2

    - name: Set up JDK 1.8 actions/setup-java v1
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: pwd
      run: pwd

    - name: Changing WORKDIR source code /home/runner/work/java-client-elasticsearch
      run: cd /home/runner/work/java-client-elasticsearch

    - name: Test ls -l
      run: ls -l

    - name: Test mvn
      run: mvn test -Dtest=ESMainTest test
          #docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    - uses: getong/elasticsearch-action@v1
      with:
        elasticsearch version: '5.6.16'
        host port: 9200
        container port: 9300
        discovery type: 'single-node'
    
    - name: Test mvn
      run: mvn test -Dtest=ESMainTest test

    - name: Run curl elastic cat/health verbose
      run: curl http://127.0.0.1:9200/_cat/health?v

    - name: Run curl elastic cat/status verbose
      run: curl http://127.0.0.1:9200/_cat/status?v


    # - name: Run tests
    #   run: |
    #     if [ -f docker-compose.test.yml ]; then
    #       docker-compose --file docker-compose.test.yml build
    #       docker-compose --file docker-compose.test.yml run sut
    #     else
    #       docker build . --file Dockerfile
    #     fi


  # build:

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image
  #     run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)


